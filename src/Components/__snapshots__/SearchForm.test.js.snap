// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchForm component should render SearchForm component correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="field has-addons"
      >
        <div
          className="control"
        >
          <input
            className="input"
            onChange={[Function]}
            placeholder="Find a phone"
            type="text"
          />
        </div>
        <div
          className="control"
        >
          <button
            className="button is-info"
            id="search-button"
          >
            Search
          </button>
        </div>
      </div>,
      "id": "search-form",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control"
          >
            <input
              className="input"
              onChange={[Function]}
              placeholder="Find a phone"
              type="text"
            />
          </div>,
          <div
            className="control"
          >
            <button
              className="button is-info"
              id="search-button"
            >
              Search
            </button>
          </div>,
        ],
        "className": "field has-addons",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="input"
              onChange={[Function]}
              placeholder="Find a phone"
              type="text"
            />,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input",
              "onChange": [Function],
              "placeholder": "Find a phone",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button is-info"
              id="search-button"
            >
              Search
            </button>,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "className": "button is-info",
              "id": "search-button",
            },
            "ref": null,
            "rendered": "Search",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="field has-addons"
        >
          <div
            className="control"
          >
            <input
              className="input"
              onChange={[Function]}
              placeholder="Find a phone"
              type="text"
            />
          </div>
          <div
            className="control"
          >
            <button
              className="button is-info"
              id="search-button"
            >
              Search
            </button>
          </div>
        </div>,
        "id": "search-form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control"
            >
              <input
                className="input"
                onChange={[Function]}
                placeholder="Find a phone"
                type="text"
              />
            </div>,
            <div
              className="control"
            >
              <button
                className="button is-info"
                id="search-button"
              >
                Search
              </button>
            </div>,
          ],
          "className": "field has-addons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="input"
                onChange={[Function]}
                placeholder="Find a phone"
                type="text"
              />,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input",
                "onChange": [Function],
                "placeholder": "Find a phone",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="button is-info"
                id="search-button"
              >
                Search
              </button>,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "className": "button is-info",
                "id": "search-button",
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`SearchForm component should render SearchForm component with properly arguments 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    onResults={
      Array [
        Object {
          "color": "Gold",
          "description": "Cupertino, California — Apple today announced iPhone Xs and iPhone Xs Max, the most advanced iPhones ever, taking the vision for the future of the smartphone to a new level. The 5.8-inch iPhone Xs and 6.5-inch iPhone Xs Max feature stunning Super Retina displays, a faster and improved dual camera system that offers breakthrough photo and video features, the first 7-nanometer chip in a smartphone — the A12 Bionic chip with next-generation Neural Engine — faster Face ID, wider stereo sound, a beautiful new gold finish and introduce Dual SIM to iPhone. iPhone Xs and iPhone Xs Max will be available for pre-order beginning Friday, September 14 and in stores beginning Friday, September 21.",
          "id": "01",
          "image": "https://cdn.tmobile.com/content/dam/t-mobile/en-p/cell-phones/apple/apple-iphone-xs/gold/Apple-iPhoneXs-Gold-1-3x.jpg",
          "specs": Object {
            "dimensions": Object {
              "size": "5.94 x 2.98 x 0.33",
            },
            "display": Object {
              "liquidRetinaHDDisplay": "The iPhone XR display has rounded corners that follow a beautiful curved design, and these corners are within a standard rectangle. When measured as a standard rectangular shape, the screen is 6.06 inches diagonally (actual viewable area is less).",
              "resolution": "1792-by-828-pixel",
            },
          },
          "thumbnails": "https://s.tmocache.com//images/png/products/phones/Apple-iPhone-XS-Gold/170x250.png",
          "title": "iPhone XS Max",
        },
        Object {
          "color": "Black",
          "description": "Cupertino, California — Apple today announced iPhone Xs and iPhone Xs Max, the most advanced iPhones ever, taking the vision for the future of the smartphone to a new level. The 5.8-inch iPhone Xs and 6.5-inch iPhone Xs Max feature stunning Super Retina displays, a faster and improved dual camera system that offers breakthrough photo and video features, the first 7-nanometer chip in a smartphone — the A12 Bionic chip with next-generation Neural Engine — faster Face ID, wider stereo sound, a beautiful new gold finish and introduce Dual SIM to iPhone. iPhone Xs and iPhone Xs Max will be available for pre-order beginning Friday, September 14 and in stores beginning Friday, September 21.",
          "id": "02",
          "image": "https://cdn.tmobile.com/content/dam/t-mobile/en-p/cell-phones/apple/apple-iphone-xr/black/Apple-iPhoneXr-Black-1-3x.jpg",
          "specs": Object {
            "dimensions": Object {
              "size": "5.94 x 2.98 x 0.33",
            },
            "display": Object {
              "liquidRetinaHDDisplay": "The iPhone XR display has rounded corners that follow a beautiful curved design, and these corners are within a standard rectangle. When measured as a standard rectangular shape, the screen is 6.06 inches diagonally (actual viewable area is less).",
              "resolution": "1792-by-828-pixel",
            },
          },
          "thumbnails": "https://s.tmocache.com//images/png/products/phones/Apple-iPhone-XS-Gold/170x250.png",
          "title": "iPhone XR",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="field has-addons"
      >
        <div
          className="control"
        >
          <input
            className="input"
            onChange={[Function]}
            placeholder="Find a phone"
            type="text"
          />
        </div>
        <div
          className="control"
        >
          <button
            className="button is-info"
            id="search-button"
          >
            Search
          </button>
        </div>
      </div>,
      "id": "search-form",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control"
          >
            <input
              className="input"
              onChange={[Function]}
              placeholder="Find a phone"
              type="text"
            />
          </div>,
          <div
            className="control"
          >
            <button
              className="button is-info"
              id="search-button"
            >
              Search
            </button>
          </div>,
        ],
        "className": "field has-addons",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="input"
              onChange={[Function]}
              placeholder="Find a phone"
              type="text"
            />,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input",
              "onChange": [Function],
              "placeholder": "Find a phone",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button is-info"
              id="search-button"
            >
              Search
            </button>,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "className": "button is-info",
              "id": "search-button",
            },
            "ref": null,
            "rendered": "Search",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="field has-addons"
        >
          <div
            className="control"
          >
            <input
              className="input"
              onChange={[Function]}
              placeholder="Find a phone"
              type="text"
            />
          </div>
          <div
            className="control"
          >
            <button
              className="button is-info"
              id="search-button"
            >
              Search
            </button>
          </div>
        </div>,
        "id": "search-form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control"
            >
              <input
                className="input"
                onChange={[Function]}
                placeholder="Find a phone"
                type="text"
              />
            </div>,
            <div
              className="control"
            >
              <button
                className="button is-info"
                id="search-button"
              >
                Search
              </button>
            </div>,
          ],
          "className": "field has-addons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="input"
                onChange={[Function]}
                placeholder="Find a phone"
                type="text"
              />,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input",
                "onChange": [Function],
                "placeholder": "Find a phone",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="button is-info"
                id="search-button"
              >
                Search
              </button>,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "className": "button is-info",
                "id": "search-button",
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
